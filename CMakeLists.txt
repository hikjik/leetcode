project(leetcode)

cmake_minimum_required(VERSION 3.8)

set(CMAKE_CXX_STANDARD             20)
set(CMAKE_MODULE_PATH              "${CMAKE_SOURCE_DIR}/tools/cmake")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}")
set(CMAKE_EXPORT_COMPILE_COMMANDS  ON)

find_package(Catch REQUIRED)

include(tools/cmake/TestSolution.cmake)
include(tools/cmake/BuildFlags.cmake)
include_directories(tools/util)

function(add_task name)
  if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/${name})
    add_subdirectory(${name})
  endif()
endfunction()

add_task(add-binary)
add_task(add-two-numbers)
add_task(average-salary-excluding-the-minimum-and-maximum-salary)
add_task(binary-search)
add_task(contains-duplicate)
add_task(count-odd-numbers-in-an-interval-range)
add_task(find-all-lonely-numbers-in-the-array)
add_task(find-pivot-index)
add_task(first-bad-version)
add_task(maximum-depth-of-binary-tree)
add_task(maximum-subarray)
add_task(number-of-1-bits)
add_task(palindrome-number)
add_task(plus-one)
add_task(remove-duplicate-letters)
add_task(reverse-linked-list)
add_task(reverse-linked-list-ii)
add_task(running-sum-of-1d-array)
add_task(search-insert-position)
add_task(single-number-i)
add_task(single-number-ii)
add_task(single-number-iii)
add_task(smallest-subsequence)
add_task(two-sum)
